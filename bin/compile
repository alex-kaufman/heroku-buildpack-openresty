#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3


function topic() {
  echo "-----> $*"
}

APP_PREFIX=/app/.heroku
mkdir -p $APP_PREFIX

BP_CACHE_DIR="$CACHE_DIR/heroku-openresty-buildpack"
mkdir -p $BP_CACHE_DIR
OPENRESTY_CACHE_DIR="$BP_CACHE_DIR/$APP_PREFIX"


if [ -d $OPENRESTY_CACHE_DIR ]
	topic "Restoring openresty build from cache..."
	mv $APP_PREFIX $BUILD_DIR/
else
	$PKG=http://openresty.org/download/openresty-1.13.6.1.tar.gz 

	topic "Downloading Openresty..."
	curl -O -L $PKG

	tar -xvf openresty-1.13.6.1.tar.gz 
	cd openresty-1.13.6.1
	export PATH=/sbin:$PATH

	topic "Configuring openresty...."
	./configure -j2  --with-pcre-jit --with-luajit --prefix=$APP_PREFIX
	make
	make install
	cd

	topic "Caching directory..."
	mv $APP_PREFIX $OPENRESTY_CACHE_DIR

	topic "Making Openresty available to running application...."
	mv $APP_PREFIX $BUILD_DIR/
function

mkdir -p $BUILD_DIR/conf/env/vars
cp $ENV_DIR/* $BUILD_DIR/conf/env/vars

if [ ! -r $BUILD_DIR/Procfile ]; then
  if [ ! -r $BUILD_DIR/start.sh ]; then
    cat > $BUILD_DIR/start.sh <<'EOF'
#!/bin/sh
mkdir -p logs
touch logs/error.log
touch logs/access.log
echo "listen $PORT;" > conf/env/heroku-http-port
openresty/nginx/sbin/nginx -p `pwd`/ -c conf/openresty.conf
EOF
    chmod +x $BUILD_DIR/start.sh
  fi
  topic '       No Procfile; using start.sh'
  topic 'web: ./start.sh' > $BUILD_DIR/Procfile
fi
